server {

    server_name cdn.danielrangel.net;

    # Root directory
    root /var/www/repos/cdn;

    # Location block to serve .min.css files
    location ~* \.min\.css$ {

#        block access to other websites
#        valid_referers none blocked shrood.app be.shrood.app cdn.danielrangel.net 75.139.85.117;

#        Allow access if the referer is valid
#        if ($invalid_referer) {
#         return 403;
#        }

#        Serve the CSS files from the 'css' subdirectory
        try_files /dist/css$uri =404;
    }

    location ~* \.js {
	add_header Access-Control-Allow-Origin "*";
	try_files /dist/js$uri = 404;
    }

#        Location block to serve .html files
    location ~* \.html$ {

        valid_referers none blocked cdn.danielrangel.net;

        if ($invalid_referer){
         return 403;
         }

        # Serve the HTML files
        try_files /html$uri =404;
    }

    location /assets/fonts/ {
      add_header Access-Control-Allow-Origin "https://shrood.app";
     }

    # Serve images from /images directory con directory listing abilitato
    location /images/ {
        autoindex on;
        autoindex_exact_size off; # mostra dimensioni leggibili
        autoindex_localtime on;   # mostra data locale
    }

    # Serve standalone canvas app at /anki/draw
    location = /images/anki/draw {
        return 302 /images/anki/draw/;
    }

    location ^~ /images/anki/draw/ {
        alias /var/www/repos/cdn/tmp/;  # directory containing index.html, styles.css, app.js
        index index.html;
    }

    # Enable saving images to /images/anki/ via HTTP PUT (WebDAV)
    location /images/anki/ {
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        client_body_temp_path /var/www/repos/cdn/tmp;
        dav_methods PUT;
        create_full_put_path on;
        client_max_body_size 25M;

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'PUT, GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type';

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'PUT, GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cdn.danielrangel.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cdn.danielrangel.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}server {
    if ($host = cdn.danielrangel.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;

    server_name cdn.danielrangel.net;
    return 404; # managed by Certbot


}